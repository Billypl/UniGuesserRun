services:
  db:
    container_name: ugr-db
    image: postgres
    restart: always
    # uncomment to persist data
    #volumes:
    #  - ./db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: postgres
      POSTGRES_DB: UniGuesser

  adminer:
    container_name: ugr-db-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080

  backend:
    depends_on:
      - db
    container_name: ugr-api
    image: mcr.microsoft.com/dotnet/sdk:8.0
    ports:
      - '${BACKEND_HTTP_PORT}:${BACKEND_HTTP_PORT}'
      - '${BACKEND_HTTPS_PORT}:${BACKEND_HTTPS_PORT}'
    volumes:
      - ./backend/PartyGame:/app
      - ./https/dev-cert.pfx:/https/dev-cert.pfx
    environment:
      - ASPNETCORE_URLS=http://+:5223;https://+:7157
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/dev-cert.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=admin
      - ASPNETCORE_Kestrel__Certificates__Default__AllowInvalid=true
      - ASPNETCORE_ENVIRONMENT=Development

    command: bash -c "cd app && dotnet watch run --launch-profile https"

  frontend:
    depends_on:
      - backend
    container_name: frontend
    image: node:23.5.0-alpine
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      WATCHPACK_POLLING: 'true'
    command: sh -c "cd app && npm install && npm run start"
