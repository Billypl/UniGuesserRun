services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${DB_URL}
      ME_CONFIG_BASICAUTH: false

  backend:
    depends_on:
      - mongo
    container_name: ugr-api
    image: mcr.microsoft.com/dotnet/sdk:8.0
    ports:
      - '${BACKEND_HTTP_PORT}:${BACKEND_HTTP_PORT}'
      - '${BACKEND_HTTPS_PORT}:${BACKEND_HTTPS_PORT}'
    volumes:
      - ./backend/PartyGame:/app
      - ./https/dev-cert.pfx:/https/dev-cert.pfx
    environment:
      - ASPNETCORE_URLS=http://+:5223;https://+:7157
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/dev-cert.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=admin
      - ASPNETCORE_Kestrel__Certificates__Default__AllowInvalid=true
      - ASPNETCORE_ENVIRONMENT=Development

    command: bash -c "cd app && dotnet watch run --launch-profile https"

  frontend:
    depends_on:
      - backend
    container_name: frontend
    image: node:23.5.0-alpine
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      WATCHPACK_POLLING: 'true'
    command: sh -c "cd app && npm install && npm run start"
